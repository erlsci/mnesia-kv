name: ci/cd

on:
  workflow_dispatch:
  push:
    branches: [ main, 'release/**', 'task/**', 'feature/**', 'epic/**']
    tags: ['**']
  pull_request:
    branches: [ main, 'release/**', 'task/**', 'feature/**', 'epic/**']
  schedule:
    - cron: "19 3 26 * *"

jobs:

  builds:
    name: Erlang ${{ matrix.otp_version }} build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp_version: ['24', '25', '26']

    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        rebar3-version: '3.22'
    - name: Compile
      run: rebar3 compile
    - name: Xref Checks
      run: rebar3 xref
    - name: Dialyzer
      run: rebar3 dialyzer
    - name: Run Unit Tests
      run: rebar3 as test eunit
    - name: Run Proper Tests
      run: rebar3 as test do proper -c
    - name: Check Coverage
      run: rebar3 as test cover -v --min_coverage=0

  old-builds:
    name: Erlang ${{ matrix.otp_version }} build (old)
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        otp_version: ['21.3', '22.3', '23.3']

    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        rebar3-version: '3.15'
    - name: Compile
      run: rebar3 compile
    - name: Xref Checks
      run: rebar3 xref
    - name: Dialyzer
      run: rebar3 dialyzer
    - name: Run Unit Tests
      run: rebar3 as test eunit
    - name: Run Proper Tests
      run: rebar3 as test do proper -c
    - name: Check Coverage
      run: rebar3 as test cover -v --min_coverage=0
